#!/usr/bin/env pwsh

param(
    [switch]$NoDocker,
    [switch]$Debug,
    [switch]$Help
)

if ($Help) {
    Write-Host "üöÄ ZeroEnhanced CLI Starter" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:" -ForegroundColor Yellow
    Write-Host "  .\start-all-cli.ps1         # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å Docker"
    Write-Host "  .\start-all-cli.ps1 -NoDocker  # –ó–∞–ø—É—Å–∫ –±–µ–∑ Docker"
    Write-Host "  .\start-all-cli.ps1 -Debug     # Debug —Ä–µ–∂–∏–º"
    Write-Host "  .\start-all-cli.ps1 -Help      # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"
    exit 0
}

$ErrorActionPreference = "Stop"
$OriginalLocation = Get-Location

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
function Write-LogInfo { param([string]$Message) Write-Host "‚Ñπ  $Message" -ForegroundColor Cyan }
function Write-LogSuccess { param([string]$Message) Write-Host "‚úì  $Message" -ForegroundColor Green }
function Write-LogWarning { param([string]$Message) Write-Host "‚ö†  $Message" -ForegroundColor Yellow }
function Write-LogError { param([string]$Message) Write-Host "‚úó  $Message" -ForegroundColor Red }
function Write-LogStep { param([string]$Message) Write-Host "*  $Message" -ForegroundColor Magenta }

# –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
function Show-Loading {
    param([string]$Message, [int]$Duration = 3)
    
    $chars = @("‚†ã", "‚†ô", "‚†π", "‚†∏", "‚†º", "‚†¥", "‚†¶", "‚†ß", "‚†á", "‚†è")
    
    for ($i = 0; $i -lt ($Duration * 10); $i++) {
        $char = $chars[$i % 10]
        Write-Host -NoNewline "`r$char  $Message" -ForegroundColor Cyan
        Start-Sleep -Milliseconds 100
    }
    Write-Host "`r‚úì  $Message" -ForegroundColor Green
}

# –ö—Ä–∞—Å–∏–≤—ã–π –ª–æ–≥–æ—Ç–∏–ø
function Show-Logo {
    Clear-Host
    Write-Host @"
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó
‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë
 ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïë       ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù     ‚ñà‚ñà‚ïë       ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë       ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù        ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù
"@ -ForegroundColor Cyan
    Write-Host "CLI Terminal Launcher" -ForegroundColor Blue
    Write-Host "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê=" -ForegroundColor Blue
    Write-Host ""
                }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function Test-Dependencies {
    Write-LogStep "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
    try {
        $nodeVersion = node --version 2>$null
        if (-not $nodeVersion) {
            Write-LogError "Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
            Write-LogInfo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js: https://nodejs.org/"
            return $false
        }
    } catch {
        Write-LogError "Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return $false
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
    try {
        $npmVersion = npm --version 2>$null
        if (-not $npmVersion) {
            Write-LogError "npm –Ω–µ –Ω–∞–π–¥–µ–Ω"
            return $false
        }
    } catch {
        Write-LogError "npm –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return $false
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript
    try {
        $tscVersion = tsc --version 2>$null
        if (-not $tscVersion) {
            Write-LogWarning "TypeScript –Ω–µ –Ω–∞–π–¥–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ"
            Write-LogInfo "–ü–æ–ø—Ä–æ–±—É—é —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: npm install -g typescript"
            try {
                npm install -g typescript | Out-Null
            } catch {
                Write-LogError "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å TypeScript"
                return $false
            }
        }
    } catch {
        Write-LogWarning "TypeScript –Ω–µ –Ω–∞–π–¥–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ"
        Write-LogInfo "–ü–æ–ø—Ä–æ–±—É—é —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: npm install -g typescript"
        try {
            npm install -g typescript | Out-Null
        } catch {
            Write-LogError "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å TypeScript"
            return $false
        }
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞
    if (-not (Test-Path "node_modules")) {
        Write-LogWarning "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        Write-LogInfo "–ó–∞–ø—É—Å–∫–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É: npm install"
        try {
            npm install | Out-Null
        } catch {
            Write-LogError "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
            return $false
        }
    }
    
    Write-LogSuccess "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –ø–æ—Ä—è–¥–∫–µ"
    return $true
}

# –ó–∞–ø—É—Å–∫ CLI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function Start-CliApp {
    Write-LogStep "–ó–∞–ø—É—Å–∫ CLI —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
    npx ts-node src/main.ts
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
function Test-Environment {
    Write-LogStep "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if (Test-Path "Prod.json") {
        try {
            $config = Get-Content "Prod.json" | ConvertFrom-Json
            
            if ($config.prod -eq $true) {
                Write-LogInfo "–†–µ–∂–∏–º: Production"
            } else {
                Write-LogInfo "–†–µ–∂–∏–º: Development"
    }
    
            if ($config.domain) {
                Write-LogInfo "API —Å–µ—Ä–≤–µ—Ä: $($config.domain)"
}
        } catch {
            Write-LogWarning "–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Prod.json"
        }
    } else {
        Write-LogWarning "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Prod.json –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    }
    
    Write-LogSuccess "–û–∫—Ä—É–∂–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Start-Main {
    Show-Logo
    
    Write-LogInfo "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CLI —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
    Write-Host ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    if (-not (Test-Dependencies)) {
        Write-LogError "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
        exit 1
    }
    Write-Host ""
    
    Test-Environment
    Write-Host ""
    
    # –ó–∞–ø—É—Å–∫
    Write-LogInfo "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –∑–∞–ø—É—Å–∫–∞—é CLI"
    Write-Host "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê=" -ForegroundColor Blue
    Write-Host ""
    
    Start-CliApp
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
function Test-Directory {
    if (-not (Test-Path "package.json") -and -not (Test-Path "src")) {
        Write-LogError "–°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
        Write-LogInfo "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å package.json –∏ src/"
        exit 1
    }
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
function Stop-Cleanup {
    Write-Host ""
    Write-LogInfo "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã CLI"
    exit 0
}

# –ó–∞–ø—É—Å–∫
try {
    Test-Directory
    Start-Main
} catch {
    Stop-Cleanup
} 