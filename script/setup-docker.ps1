# PowerShell –≤–µ—Ä—Å–∏—è –¥–ª—è Windows
# üê≥ ZeroEnhanced Docker Setup Script

Write-Host "üê≥ ZeroEnhanced Docker Setup –¥–ª—è Windows" -ForegroundColor Cyan

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
$DOCKER_IMAGE_NAME = "zet-sandbox-image"
$SANDBOX_CONTAINER_NAME = "zet-sandbox"
$DOCKERFILE_PATH = ".\docker-sandbox\Dockerfile"
$SANDBOX_DIR = ".\sandbox"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
$scriptPath = Split-Path -Parent $MyInvocation.MyCommand.Path
Set-Location (Join-Path $scriptPath "..")

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker
function Test-Docker {
    try {
        if (Get-Command docker -ErrorAction SilentlyContinue) {
            $null = docker ps 2>$null
            return $true
        }
    } catch {
        return $false
    }
    return $false
}

function Test-DockerDesktop {
    try {
        $dockerProcess = Get-Process "Docker Desktop" -ErrorAction SilentlyContinue
        return ($dockerProcess -ne $null)
    } catch {
        return $false
    }
}

function Test-ImageExists {
    try {
        $null = docker image inspect "$DOCKER_IMAGE_NAME`:latest" 2>$null
        return $true
    } catch {
        return $false
    }
}

function Test-ContainerExists {
    try {
        $null = docker container inspect $SANDBOX_CONTAINER_NAME 2>$null
        return $true
    } catch {
        return $false
    }
}

function Test-ContainerRunning {
    try {
        $status = docker inspect -f '{{.State.Running}}' $SANDBOX_CONTAINER_NAME 2>$null
        return ($status -eq "true")
    } catch {
        return $false
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
function Check-Docker {
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Purple
    
    if (-not (Test-Docker)) {
        Write-Host "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω!" -ForegroundColor Red
        Write-Host "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop:" -ForegroundColor Yellow
        Write-Host "   .\script\install-system-packages.ps1" -ForegroundColor White
        exit 1
    }
    
    Write-Host "‚úÖ Docker –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ" -ForegroundColor Green
}

# –°–æ–∑–¥–∞–Ω–∏–µ sandbox –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
function Create-SandboxDir {
    Write-Host "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ sandbox –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..." -ForegroundColor Purple
    
    if (-not (Test-Path $SANDBOX_DIR)) {
        New-Item -ItemType Directory -Path $SANDBOX_DIR | Out-Null
        Write-Host "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $SANDBOX_DIR —Å–æ–∑–¥–∞–Ω–∞" -ForegroundColor Green
    } else {
        Write-Host "‚ÑπÔ∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $SANDBOX_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Cyan
    }
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    $readmePath = Join-Path $SANDBOX_DIR "README.md"
    if (-not (Test-Path $readmePath)) {
        $readmeContent = @"
# ZetGui Sandbox

–≠—Ç–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–∫ /workspace.

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:
- –°–æ–∑–¥–∞–≤–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ AI
- –í—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Å—Ä–µ–¥–µ  
- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –±–µ–∑ —Ä–∏—Å–∫–∞ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞

sandbox/
‚îú‚îÄ‚îÄ README.md     # –≠—Ç–æ—Ç —Ñ–∞–π–ª
‚îú‚îÄ‚îÄ projects/     # –í–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã
‚îî‚îÄ‚îÄ temp/         # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã

–í—Å–µ —Ñ–∞–π–ª—ã –∑–¥–µ—Å—å –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –ø–æ –ø—É—Ç–∏ /workspace/.
"@
        Set-Content -Path $readmePath -Value $readmeContent -Encoding UTF8
        
        New-Item -ItemType Directory -Path (Join-Path $SANDBOX_DIR "projects") -Force | Out-Null
        New-Item -ItemType Directory -Path (Join-Path $SANDBOX_DIR "temp") -Force | Out-Null
        
        Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π README –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π" -ForegroundColor Green
    }
}

# –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
function Build-DockerImage {
    Write-Host "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..." -ForegroundColor Purple
    
    if (-not (Test-Path $DOCKERFILE_PATH)) {
        Write-Host "‚ùå Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω: $DOCKERFILE_PATH" -ForegroundColor Red
        exit 1
    }
    
    Write-Host "üì¶ –°–æ–±–∏—Ä–∞—é –æ–±—Ä–∞–∑ $DOCKER_IMAGE_NAME`:latest..." -ForegroundColor Yellow
    
    try {
        docker build -t "$DOCKER_IMAGE_NAME`:latest" -f $DOCKERFILE_PATH "./docker-sandbox/" --no-cache
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ –û–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
        } else {
            throw "Docker build failed"
        }
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Docker –æ–±—Ä–∞–∑–∞" -ForegroundColor Red
        exit 1
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
function Create-Container {
    Write-Host "üê≥ –°–æ–∑–¥–∞–Ω–∏–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..." -ForegroundColor Purple
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –µ—Å–ª–∏ –µ—Å—Ç—å
    if (Test-ContainerExists) {
        Write-Host "‚ÑπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..." -ForegroundColor Cyan
        docker stop $SANDBOX_CONTAINER_NAME 2>$null | Out-Null
        docker rm $SANDBOX_CONTAINER_NAME 2>$null | Out-Null
    }
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    Write-Host "‚ÑπÔ∏è –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $SANDBOX_CONTAINER_NAME..." -ForegroundColor Cyan
    
    $absoluteSandboxPath = (Resolve-Path $SANDBOX_DIR).Path
    
    try {
        $volumeMount = "${absoluteSandboxPath}:/workspace"
        docker create --name $SANDBOX_CONTAINER_NAME --tty --interactive --workdir "/workspace" --volume $volumeMount "$DOCKER_IMAGE_NAME`:latest" /bin/bash
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $SANDBOX_CONTAINER_NAME —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green
        } else {
            throw "Container creation failed"
        }
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞" -ForegroundColor Red
        exit 1
    }
}

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
function Start-Container {
    Write-Host "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..." -ForegroundColor Purple
    
    if (Test-ContainerRunning) {
        Write-Host "‚ÑπÔ∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Cyan
        return
    }
    
    try {
        docker start $SANDBOX_CONTAINER_NAME
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
        } else {
            throw "Container start failed"
        }
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞" -ForegroundColor Red
        exit 1
    }
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
function Test-Container {
    Write-Host "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..." -ForegroundColor Purple
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω
    if (-not (Test-ContainerRunning)) {
        Write-Host "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Red
        return $false
    }
    
    # –¢–µ—Å—Ç 2: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã
    Write-Host "‚ÑπÔ∏è –í—ã–ø–æ–ª–Ω—è—é —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É..." -ForegroundColor Cyan
    try {
        $result = docker exec $SANDBOX_CONTAINER_NAME echo "Hello from ZetGui sandbox!" 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ" -ForegroundColor Red
            return $false
        }
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ" -ForegroundColor Red
        return $false
    }
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    Write-Host "‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä—è—é –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ sandbox –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..." -ForegroundColor Cyan
    try {
        $result = docker exec $SANDBOX_CONTAINER_NAME ls -la /workspace/README.md 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Sandbox –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º sandbox –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏" -ForegroundColor Red
            return $false
        }
    } catch {
        Write-Host "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º sandbox –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏" -ForegroundColor Red
        return $false
    }
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    Write-Host "‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä—è—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..." -ForegroundColor Cyan
    try {
        $curlCheck = docker exec $SANDBOX_CONTAINER_NAME which curl 2>$null
        $gitCheck = docker exec $SANDBOX_CONTAINER_NAME which git 2>$null
        $nanoCheck = docker exec $SANDBOX_CONTAINER_NAME which nano 2>$null
        
        if ($curlCheck -and $gitCheck -and $nanoCheck) {
            Write-Host "‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞–∫–µ—Ç—ã –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ" -ForegroundColor Yellow
        }
    } catch {
        Write-Host "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞–∫–µ—Ç—ã –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ" -ForegroundColor Yellow
    }
    
    Write-Host "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    return $true
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
function Show-ContainerInfo {
    Write-Host "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..." -ForegroundColor Purple
    
    Write-Host "üìä –°—Ç–∞—Ç—É—Å Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è:" -ForegroundColor Cyan
    Write-Host "  ‚Ä¢ –û–±—Ä–∞–∑:     $DOCKER_IMAGE_NAME`:latest" -ForegroundColor Blue
    Write-Host "  ‚Ä¢ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: $SANDBOX_CONTAINER_NAME" -ForegroundColor Blue
    Write-Host "  ‚Ä¢ Sandbox:   $SANDBOX_DIR ‚Üí /workspace" -ForegroundColor Blue
    
    if (Test-ImageExists) {
        Write-Host "  ‚úÖ –û–±—Ä–∞–∑ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå –û–±—Ä–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    }
    
    if (Test-ContainerExists) {
        if (Test-ContainerRunning) {
            Write-Host "  ‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
        } else {
            Write-Host "  ‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Yellow
        }
    } else {
        Write-Host "  ‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ —Å–æ–∑–¥–∞–Ω" -ForegroundColor Red
    }
}

# –û—á–∏—Å—Ç–∫–∞
function Remove-DockerResources {
    Write-Host "üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..." -ForegroundColor Purple
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    if (Test-ContainerExists) {
        Write-Host "‚ÑπÔ∏è –£–¥–∞–ª—è—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $SANDBOX_CONTAINER_NAME..." -ForegroundColor Cyan
        docker stop $SANDBOX_CONTAINER_NAME 2>$null | Out-Null
        docker rm $SANDBOX_CONTAINER_NAME 2>$null | Out-Null
        Write-Host "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–¥–∞–ª–µ–Ω" -ForegroundColor Green
    }
    
    # –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–∑
    if (Test-ImageExists) {
        Write-Host "‚ÑπÔ∏è –£–¥–∞–ª—è—é –æ–±—Ä–∞–∑ $DOCKER_IMAGE_NAME`:latest..." -ForegroundColor Cyan
        docker rmi "$DOCKER_IMAGE_NAME`:latest" 2>$null | Out-Null
        Write-Host "‚úÖ –û–±—Ä–∞–∑ —É–¥–∞–ª–µ–Ω" -ForegroundColor Green
    }
    
    Write-Host "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞" -ForegroundColor Green
}

# –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
function Invoke-FullSetup {
    param([string]$Mode = "")
    
    Write-Host "üéØ –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è" -ForegroundColor Purple
    Write-Host "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ" -ForegroundColor Blue
    
    Check-Docker
    Create-SandboxDir
    
    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
    if (-not (Test-ImageExists) -or $Mode -eq "--rebuild") {
        Build-DockerImage
    } else {
        Write-Host "‚ÑπÔ∏è –û–±—Ä–∞–∑ $DOCKER_IMAGE_NAME`:latest —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Cyan
    }
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    if (-not (Test-ContainerExists)) {
        Create-Container
    } else {
        Write-Host "‚ÑπÔ∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $SANDBOX_CONTAINER_NAME —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Cyan
    }
    
    Start-Container
    
    if (Test-Container) {
        Write-Host ""
        Write-Host "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ" -ForegroundColor Blue
        Write-Host "üéâ Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!" -ForegroundColor Green
        Show-ContainerInfo
        Write-Host ""
        Write-Host "üìã –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:" -ForegroundColor Cyan
        Write-Host "   –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: .\script\setup-docker.ps1 --status" -ForegroundColor White
        Write-Host "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:       .\script\setup-docker.ps1 --restart" -ForegroundColor White
        Write-Host "   –û—á–∏—Å—Ç–∫–∞:          .\script\setup-docker.ps1 --cleanup" -ForegroundColor White
        Write-Host ""
    } else {
        Write-Host "‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏" -ForegroundColor Red
        exit 1
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    param([string]$Command = "setup")
    
    switch ($Command) {
        "setup" { Invoke-FullSetup }
        "--setup" { Invoke-FullSetup }
        "--rebuild" { Invoke-FullSetup "--rebuild" }
        "--status" { Show-ContainerInfo }
        "--start" { 
            Check-Docker
            Start-Container 
        }
        "--restart" {
            Check-Docker
            if (Test-ContainerExists) {
                docker restart $SANDBOX_CONTAINER_NAME
                Write-Host "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
            } else {
                Write-Host "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Red
                exit 1
            }
        }
        "--test" {
            Check-Docker
            Test-Container
        }
        "--cleanup" { Remove-DockerResources }
        "--help" {
            Write-Host "üê≥ ZeroEnhanced Docker Setup"
            Write-Host "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\script\setup-docker.ps1 [–∫–æ–º–∞–Ω–¥–∞]"
            Write-Host ""
            Write-Host "–ö–æ–º–∞–Ω–¥—ã:"
            Write-Host "  setup     - –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
            Write-Host "  --rebuild - –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
            Write-Host "  --status  - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
            Write-Host "  --start   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
            Write-Host "  --restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
            Write-Host "  --test    - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
            Write-Host "  --cleanup - –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –æ–±—Ä–∞–∑"
            Write-Host "  --help    - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        }
        default {
            Write-Host "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $Command" -ForegroundColor Red
            Write-Host "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏" -ForegroundColor Yellow
            exit 1
        }
    }
}

# –ó–∞–ø—É—Å–∫
Main @args 