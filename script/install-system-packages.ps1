# ZetGui System Dependencies Installer
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Windows

$ErrorActionPreference = "Stop"

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Å–∏–º–≤–æ–ª–∞–º–∏  
function log_info { param([string]$msg) Write-Host "‚Ñπ  $msg" -ForegroundColor Cyan }
function log_success { param([string]$msg) Write-Host "‚úì  $msg" -ForegroundColor Green }
function log_warning { param([string]$msg) Write-Host "‚ö†  $msg" -ForegroundColor Yellow }
function log_error { param([string]$msg) Write-Host "‚úó  $msg" -ForegroundColor Red }
function log_step { param([string]$msg) Write-Host "*  $msg" -ForegroundColor Purple }

# –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
function Show-Loading {
    param([string]$message, [int]$duration = 2)
    $chars = @("‚†ã", "‚†ô", "‚†π", "‚†∏", "‚†º", "‚†¥", "‚†¶", "‚†ß", "‚†á", "‚†è")
    
    for ($i = 0; $i -lt ($duration * 10); $i++) {
        $char = $chars[$i % $chars.Length]
        Write-Host "`r$char  $message" -NoNewline -ForegroundColor Cyan
        Start-Sleep -Milliseconds 100
    }
    Write-Host "`r‚úì  $message" -ForegroundColor Green
}

# –ö—Ä–∞—Å–∏–≤—ã–π –ª–æ–≥–æ—Ç–∏–ø
function Show-Logo {
    Clear-Host
    Write-Host "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó" -ForegroundColor Cyan
    Write-Host "‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë" -ForegroundColor Cyan  
    Write-Host " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïë       ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë" -ForegroundColor Cyan
    Write-Host "‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù     ‚ñà‚ñà‚ïë       ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë" -ForegroundColor Cyan
    Write-Host "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë       ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë" -ForegroundColor Cyan
    Write-Host "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù        ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "System Dependencies Installer" -ForegroundColor Blue
    Write-Host "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" -ForegroundColor Blue
    Write-Host ""
}

Show-Logo
log_step "ZetGui System Dependencies Installation –¥–ª—è Windows"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
function Check-Installed {
    param([string]$Command, [string]$VersionCmd)
    
    try {
        if (Get-Command $Command -ErrorAction SilentlyContinue) {
            $version = Invoke-Expression $VersionCmd 2>$null
            Write-Host "‚úÖ $Command —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $version" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ö†Ô∏è $Command –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Yellow
            return $false
        }
    } catch {
        Write-Host "‚ö†Ô∏è $Command –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Yellow
        return $false
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è winget
function Test-Winget {
    try {
        $null = Get-Command winget -ErrorAction Stop
        return $true
    } catch {
        return $false
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è chocolatey
function Test-Chocolatey {
    try {
        $null = Get-Command choco -ErrorAction Stop
        return $true
    } catch {
        return $false
    }
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ chocolatey
function Install-Chocolatey {
    Write-Host "üç´ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Chocolatey..." -ForegroundColor Yellow
    Set-ExecutionPolicy Bypass -Scope Process -Force
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
    Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
    
    # –û–±–Ω–æ–≤–ª—è–µ–º PATH
    $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH","User")
    
    if (Test-Chocolatey) {
        Write-Host "‚úÖ Chocolatey —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Chocolatey" -ForegroundColor Red
        exit 1
    }
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ winget
function Install-WithWinget {
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ winget..." -ForegroundColor Purple
    
    # Node.js
    if (-not (Check-Installed "node" "node --version")) {
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Node.js..." -ForegroundColor Yellow
        winget install OpenJS.NodeJS --accept-package-agreements --accept-source-agreements
    }
    
    # Git
    if (-not (Check-Installed "git" "git --version")) {
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Git..." -ForegroundColor Yellow
        winget install Git.Git --accept-package-agreements --accept-source-agreements
    }
    
    # Docker Desktop
    if (-not (Check-Installed "docker" "docker --version")) {
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Docker Desktop..." -ForegroundColor Yellow
        winget install Docker.DockerDesktop --accept-package-agreements --accept-source-agreements
        Write-Host "‚ö†Ô∏è –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker Desktop —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞!" -ForegroundColor Yellow
    }
    
    # Python (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if (-not (Check-Installed "python" "python --version")) {
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Python..." -ForegroundColor Yellow
        winget install Python.Python.3.11 --accept-package-agreements --accept-source-agreements
    }
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ chocolatey
function Install-WithChocolatey {
    Write-Host "üç´ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ Chocolatey..." -ForegroundColor Purple
    
    # Node.js
    if (-not (Check-Installed "node" "node --version")) {
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Node.js..." -ForegroundColor Yellow
        choco install nodejs -y
    }
    
    # Git
    if (-not (Check-Installed "git" "git --version")) {
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Git..." -ForegroundColor Yellow
        choco install git -y
    }
    
    # Docker Desktop
    if (-not (Check-Installed "docker" "docker --version")) {
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Docker Desktop..." -ForegroundColor Yellow
        choco install docker-desktop -y
        Write-Host "‚ö†Ô∏è –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker Desktop —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞!" -ForegroundColor Yellow
    }
    
    # Python (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if (-not (Check-Installed "python" "python --version")) {
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Python..." -ForegroundColor Yellow
        choco install python -y
    }
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ TypeScript –≥–ª–æ–±–∞–ª—å–Ω–æ
function Install-TypeScript {
    if (-not (Check-Installed "tsc" "tsc --version")) {
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é TypeScript –≥–ª–æ–±–∞–ª—å–Ω–æ..." -ForegroundColor Yellow
        npm install -g typescript ts-node
    }
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ PATH
function Update-Path {
    Write-Host "üîÑ –û–±–Ω–æ–≤–ª—è—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..." -ForegroundColor Yellow
    $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH","User")
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Desktop
function Test-DockerDesktop {
    try {
        $dockerProcess = Get-Process "Docker Desktop" -ErrorAction SilentlyContinue
        if ($dockerProcess) {
            Write-Host "‚úÖ Docker Desktop –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ö†Ô∏è Docker Desktop –Ω–µ –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Yellow
            return $false
        }
    } catch {
        Write-Host "‚ö†Ô∏è Docker Desktop –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
        return $false
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫
function Verify-Installation {
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..." -ForegroundColor Purple
    
    Update-Path
    
    $allGood = $true
    
    if (-not (Check-Installed "node" "node --version")) { $allGood = $false }
    if (-not (Check-Installed "npm" "npm --version")) { $allGood = $false }
    if (-not (Check-Installed "tsc" "tsc --version")) { $allGood = $false }
    if (-not (Check-Installed "docker" "docker --version")) { $allGood = $false }
    if (-not (Check-Installed "git" "git --version")) { $allGood = $false }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if (Test-DockerDesktop) {
        Write-Host "‚úÖ Docker Desktop —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Docker Desktop –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Red
        $allGood = $false
    }
    
    if ($allGood) {
        Write-Host "‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç!" -ForegroundColor Green
        return $true
    } else {
        Write-Host "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ" -ForegroundColor Red
        return $false
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    Write-Host ""
    Write-Host "üéØ –ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Purple
    Write-Host "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ" -ForegroundColor Blue
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    $currentUser = [Security.Principal.WindowsIdentity]::GetCurrent()
    $principal = New-Object Security.Principal.WindowsPrincipal($currentUser)
    if (-not $principal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
        Write-Host "‚ùå –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!" -ForegroundColor Red
        Write-Host "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor Yellow
        exit 1
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫..." -ForegroundColor Purple
    Check-Installed "node" "node --version"
    Check-Installed "npm" "npm --version"
    Check-Installed "tsc" "tsc --version"
    Check-Installed "docker" "docker --version"
    Check-Installed "git" "git --version"
    
    # –í—ã–±–æ—Ä –º–µ—Ç–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if (Test-Winget) {
        Write-Host "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º winget –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏" -ForegroundColor Green
        Install-WithWinget
    } elseif (Test-Chocolatey) {
        Write-Host "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º Chocolatey –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏" -ForegroundColor Green
        Install-WithChocolatey
    } else {
        Write-Host "‚ö†Ô∏è winget –∏ Chocolatey –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Chocolatey..." -ForegroundColor Yellow
        Install-Chocolatey
        Install-WithChocolatey
    }
    
    # –û–±–Ω–æ–≤–ª—è–µ–º PATH –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    Update-Path
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ TypeScript
    Install-TypeScript
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    Write-Host ""
    Write-Host "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ" -ForegroundColor Blue
    if (Verify-Installation) {
        Write-Host "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
        Write-Host ""
        Write-Host "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Cyan
        Write-Host "   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop –µ—Å–ª–∏ –æ–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω" -ForegroundColor White
        Write-Host "   2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell (–¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è PATH)" -ForegroundColor White
        Write-Host "   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: .\script\install-all-Dependencies.ps1" -ForegroundColor White
        Write-Host "   4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: .\Zet-Install.ps1" -ForegroundColor White
    } else {
        Write-Host "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏" -ForegroundColor Red
        Write-Host "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:" -ForegroundColor Yellow
        Write-Host "   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å PowerShell –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor White
        Write-Host "   - –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker Desktop –≤—Ä—É—á–Ω—É—é" -ForegroundColor White
        Write-Host "   - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∏—Å—Ç–µ–º—É" -ForegroundColor White
        exit 1
    }
    Write-Host ""
}

# –ó–∞–ø—É—Å–∫
Main 